"use strict";angular.module("test.app",["ngAnimate","ngMessages","ngTouch","pascalprecht.translate","ui.router","test.config","test.login","test.main","test.model","test.photos","test.translation","test.util"]).config(["$logProvider","config",function(a,b){a.debugEnabled(b.DEBUG)}]).config(["$translateProvider",function(a){a.useSanitizeValueStrategy("escaped").determinePreferredLanguage().fallbackLanguage("en")}]).config(["$urlRouterProvider","$stateProvider",function(a,b){a.otherwise("/login"),b.state("login",{url:"/login?next&params",templateUrl:"components/login/login.html",controller:"LoginCtrl",data:{title:"LOGIN.TITLE"}}).state("main",{"abstract":!0,templateUrl:"components/main/main.html",controller:"MainCtrl"}).state("main.photos",{url:"/photos",templateUrl:"components/photos/photos.html",controller:"PhotoCtrl",data:{title:"PHOTOS.TITLE"}}).state("main.photos.single",{url:"/:id",data:{title:"PHOTOS.TITLE"}}).state("main.about",{url:"/about",template:"<p>Hello!</p>",data:{title:"About.TITLE"}})}]).run(["$log","build",function(a,b){a.info("Test App Version:",b.version,"Commit:",b.commit,"Env:",b.env)}]).run(["$rootScope","$state","$stateParams",function(a,b,c){a.$state=b,a.$stateParams=c}]).run(["$rootScope","RouteCheckerService",function(a,b){a.$on("$stateChangeStart",b)}]),angular.module("test.config",[]).constant("config",{DEBUG:!0}).constant("build",{version:"1.0.0",commit:"de445dc",env:"development"}),angular.module("test.translation",["pascalprecht.translate"]),angular.module("test.translation").config(["$translateProvider",function(a){a.translations("en",{SITE_TITLE:"Test App",LOGIN:{TITLE:"Log In",USERNAME:"User Name",PASSWORD:"Password",REMEMBER_ME:"Remember Me",LOGIN:"Log In",ERROR:"Login failed",HELP:'Use any username/password to log in.  Use username "bad" to test failed login.'},FORMS:{INVALID_REQUIRED:"{{ ::label | translate }} is required.",INVALID_MINLENGTH:"{{ ::label | translate }} must be at least {{ minlength }} characters.",INVALID_MAXLENGTH:"{{ ::label | translate }} ust be at most {{ maxlength }} characters.",INVALID_PATTERN:"{{ ::label | translate }} cannot contain <kbd>{{ char }}</kbd>.",INVALID_EMAIL:"{{ ::label | translate }} is not a valid email address."},MAIN:{LOGGED_IN:"Logged in as {{ user }}",LOG_OUT:"Log Out"},PHOTOS:{TITLE:"Photos"},ABOUT:{TITLE:"About"}})}]),angular.module("test.model",[]),angular.module("test.model").service("UserService",["$q","$timeout",function(a,b){var c=1500,d=null;this.getUserName=function(){return d},this.setUserName=function(a){d=a},this.login=function(e,f){var g=a.defer();return b(function(){"bad"===e||"bad"===f?g.reject():(d=e,g.resolve())},c),g.promise},this.logout=function(){d=null},this.isAuthenticated=function(){return angular.isString(d)&&d.length>0}}]),angular.module("test.model").service("PhotoService",["$q","$timeout",function(a,b){var c=1500,d=[{id:0,name:"Turkish Van Cat",url:"http://upload.wikimedia.org/wikipedia/commons/2/22/Turkish_Van_Cat.jpg"},{id:1,name:"Gaia Basenji",url:"http://upload.wikimedia.org/wikipedia/commons/1/13/Gaia_Basenji.jpg"},{id:2,name:"Red Milk Snake",url:"http://upload.wikimedia.org/wikipedia/commons/a/aa/Red_milk_snake.JPG"}];this.getPhotos=function(){var e=a.defer();return b(function(){e.resolve(d)},c),e.promise}}]),angular.module("test.main",["ui.bootstrap.collapse","test.model"]),angular.module("test.main").controller("MainCtrl",["$scope","UserService",function(a,b){a.UserService=b,a.isMainNavCollapsed=!0,a.setMainNavState=function(b){angular.isDefined(b)||(b=!a.isMainNavCollapsed),a.isMainNavCollapsed=b}}]),angular.module("test.login",["test.form","test.model","test.vendor"]),angular.module("test.login").controller("LoginCtrl",["$scope","$log","$state","$stateParams","UserService",function(a,b,c,d,e){a.forms={},a.credentials={},a.error=!1,a.validators={"*":{disabled:!1},username:{required:!0},password:{required:!0}},a.login=function(f){return a.forms.login.$invalid?void 0:(a.validators["*"].disabled=!0,e.login(f.username,f.password).then(function(){a.error=!1;var e="main.photos",f={};angular.isString(d.next)&&(e=d.next),angular.isString(d.params)&&(f=angular.fromJson(d.params)),b.debug("Login success, redirecting to",e,f),c.go(e,f)},function(c){b.debug("Login failure:",c),a.error=!0}).finally(function(){a.validators["*"].disabled=!1,delete a.credentials.password,a.forms.login.password.$setUntouched()}))}}]),angular.module("test.photos",["test.form","test.model","test.vendor"]),angular.module("test.photos").controller("PhotoCtrl",["$scope","$log","PhotoService",function(a,b,c){a.loading=!0,c.getPhotos().then(function(b){a.photos=b},function(a){b.error("Failed to get photos",a)}).finally(function(){a.loading=!1})}]),angular.module("test.form",[]),angular.module("test.form").directive("form",function(){return{restrict:"E",require:"form",scope:{validators:"=?"},link:function(a,b,c,d){var e=function(){a.$apply(function(){angular.forEach(d,function(a){a.hasOwnProperty("$setTouched")&&a.$setTouched()})})};b.on("submit",e),b.on("$destroy",function(){b.off("submit",e)}),angular.isDefined(a.validators)&&(d.$lsValidators=a.validators)}}}),angular.module("test.form").directive("formInput",["$compile","ValidatorFactory",function(a,b){var c=function(a,b){for(var c=b.$viewValue,d="";c.length>0&&-1===c.search(a);)d=c.charAt(c.length-1),c=c.substr(0,c.length-1);return d};return{restrict:"E",require:"^form",scope:{model:"=",validator:"=?",name:"@",type:"@",label:"@",inputClass:"@",placeholder:"@"},templateUrl:function(a,b){switch(b.type){case"checkbox":return"components/form/formCheckbox.html";case"button":case"submit":return"components/form/formButton.html";default:return"components/form/formInput.html"}},link:function(a,d,e,f){var g=function(){a.finalValidator=b.merge(a.name,f.$lsValidators,a.validator)};a.form=f,a.findInvalidChar=c,a.placeholderID=angular.isString(a.placeholder)?a.placeholder:a.label,g(),b.build(d.find("input"),a,"name","finalValidator"),a.$watch("validator",g,!0),a.$watch(function(){return f.$lsValidators},g,!0)}}}]),angular.module("test.form").factory("ValidatorFactory",["$compile",function(a){return{merge:function(a,b,c){var d={};return angular.isObject(b["*"])&&angular.extend(d,b["*"]),angular.isObject(b[a])&&angular.extend(d,b[a]),angular.isObject(c)&&angular.extend(d,c),d},build:function(b,c,d,e){var f=c[d],g=c[e];b.attr("id",f),b.attr("name",f),angular.isDefined(g.required)&&b.attr("ng-required",e+".required"),angular.isDefined(g.minlength)&&b.attr("ng-minlength",e+".minlength"),angular.isDefined(g.maxlength)&&(b.attr("ng-maxlength",e+".maxlength"),b.attr("maxlength",g.maxlength)),angular.isDefined(g.pattern)&&b.attr("ng-pattern",e+".pattern"),angular.isDefined(g.disabled)&&b.attr("ng-disabled",e+".disabled"),a(b)(c)}}}]),angular.module("test.util",[]),angular.module("test.util").factory("RouteCheckerService",["$log","$state","UserService",function(a,b,c){return function(d,e,f){if(!c.isAuthenticated()&&0===e.name.indexOf("main")){a.info("Not logged in, redirecting to login."),d.preventDefault();var g={next:e.name};Object.keys(f).length>0&&(g.params=angular.toJson(f)),b.go("login",g)}}}]),angular.module("test.util").filter("stateToClass",function(){return function(a){for(var b=a.split("."),c="",d=[],e=0;e<b.length;e++)c=c+=b[e],d.push("state-"+c),c+="-";return d.join(" ")}}),angular.module("test.vendor",[]),angular.module("test.vendor").directive("spinner",function(){var a={lines:13,length:20,width:10,radius:30,corners:1,rotate:0,direction:1,color:"#000",speed:1,trail:60,shadow:!0,hwaccel:!1,className:"spinner",zIndex:2e9,top:"50%",left:"50%"};return{restrict:"E",link:function(b,c,d){var e=null;d.$observe("spinner",function(d){null!==e&&e.stop();var f=b.$eval(d);angular.isObject(f)||(f={});var g=angular.copy(a);angular.extend(g,f),e=new Spinner(g).spin(c[0])}),c.on("$destroy",function(){e.stop()})}}}),angular.module("test.app").run(["$templateCache",function(a){a.put("components/form/formButton.html",'<input type="{{ ::type }}" ng-class="inputClass" ng-model="model" value="{{ ::label | translate }}">'),a.put("components/form/formCheckbox.html",'<div class="form-group" ng-class="{\n    \'has-success\': form[name].$touched && form[name].$valid,\n    \'has-error\': form[name].$touched && form[name].$invalid\n  }"> <label> <input type="checkbox" ng-class="inputClass" ng-model="model"> {{ ::label | translate }} </label> </div>'),a.put("components/form/formInput.html",'<div class="form-group" ng-class="{\n    \'has-success\': form[name].$touched && form[name].$valid,\n    \'has-error\': form[name].$touched && form[name].$invalid\n  }"> <label for="{{ ::name }}" translate>{{ ::label }}</label> <input type="{{ ::type }}" class="form-control" placeholder="{{ ::placeholderID | translate }}" ng-class="inputClass" ng-model="model"> <span ng-if="form[name].$touched && form[name].$invalid" ng-messages="form[name].$error" class="help-block"> <span ng-message="required"><span translate="FORMS.INVALID_REQUIRED" translate-values="::{ label: label }"></span></span> <span ng-message="minlength"><span translate="FORMS.INVALID_MINLENGTH" translate-values="::{ label: label, minlength: finalValidator.minlength }"></span></span> <span ng-message="maxlength"><span translate="FORMS.INVALID_MAXLENGTH" translate-values="::{ label: label, maxlength: finalValidator.maxlength }"></span></span> <span ng-message="pattern"><span translate="FORMS.INVALID_PATTERN" translate-values="::{ label: label, char: findInvalidChar(finalValidator.pattern, form[name]) }"></span></span> <span ng-message="email"><span translate="FORMS.INVALID_EMAIL" translate-values="::{ label: label }"></span></span> </span> </div>'),a.put("components/login/login.html",'<div class="container"> <div class="box"> <spinner ng-if="validators[\'*\'].disabled"></spinner> <form name="forms.login" novalidate role="form" validators="validators" ng-model-options="{ updateOn: \'submit blur\' }" ng-submit="login(credentials)"> <h1>Log In</h1> <div class="alert alert-info" translate>LOGIN.HELP</div> <div class="alert alert-danger" ng-if="error" translate>LOGIN.ERROR</div> <form-input name="username" type="text" label="LOGIN.USERNAME" input-class="input-lg" model="credentials.username"></form-input> <form-input name="password" type="password" label="LOGIN.PASSWORD" input-class="input-lg" model="credentials.password"></form-input> <form-input type="submit" label="LOGIN.LOGIN" input-class="btn btn-primary btn-lg btn-block"></form-input> </form> </div> </div>'),a.put("components/main/main.html",'<nav class="navbar navbar-default navbar-static-top" role="navigation"> <div class="container-fluid"> <div class="navbar-header"> <button type="button" class="navbar-toggle" ng-click="setMainNavState()"> <span class="sr-only">Toggle navigation</span> <span class="icon-bar"></span> <span class="icon-bar"></span> <span class="icon-bar"></span> </button> <a class="navbar-brand" ui-sref="main.photos">Test App</a> </div> <div class="collapse navbar-collapse" collapse="isMainNavCollapsed"> <ul class="nav navbar-nav"> <li ui-sref-active="active"><a ui-sref="main.photos" translate>PHOTOS.TITLE</a></li> <li ui-sref-active="active"><a ui-sref="main.about" translate>ABOUT.TITLE</a></li> </ul> <p class="navbar-text navbar-right"> <span translate translate-value-user="{{ UserService.getUserName() }}">MAIN.LOGGED_IN</span> <a ui-sref="login" class="navbar-link" translate>MAIN.LOG_OUT</a> </p> </div> </div> </nav> <ui-view class="main-view"></ui-view>'),a.put("components/photos/photos.html",'<div class="container"> <div class="row photo-grid"> <spinner ng-if="loading"></spinner> <div class="col-sm-6 col-md-4 photo" ng-repeat="photo in photos"> <a ui-sref="main.photos.single({ id: photo.id })"> <div class="thumbnail"> <img ng-src="{{ photo.url }}" alt="{{ name }}"> <div class="caption"> <h3>{{ photo.name }}</h3> </div> </div> </a> </div> </div> </div>')}]);